name: Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [ '3.12', '3.11', '3.10', '3.9', '3.8', '3.7' ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install pipenv
      - run: python -m pipenv install --python ${{ matrix.python-version }} --dev
      # Invoke currently seems not support PowerShell,
      # production code of this package doesn't depends on cmd, however test depends on cmd.
      # - GitHub Actions default shell on Windows runners is changing to PowerShell | GitHub Changelog
      #   https://github.blog/changelog/2019-10-17-github-actions-default-shell-on-windows-runners-is-changing-to-powershell/
      - if: runner.os == 'Windows'
        run: python -m pipenv run invoke test.all
        shell: cmd
      - if: runner.os == 'Linux'
        run: python -m pipenv run invoke test.all
  check_style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - run: python -m pip install pipenv
      - run: python -m pipenv install --dev
      - run: python -m pipenv run invoke style --check
  check_lint_fast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - run: python -m pip install pipenv
      - run: python -m pipenv install --dev
      - run: python -m pipenv run invoke lint
  check_lint_deep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - run: python -m pip install pipenv
      - run: python -m pipenv install --dev
      - run: python -m pipenv run invoke lint.deep
